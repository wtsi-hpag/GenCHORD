<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="readPipe_8h" kind="file" language="C++">
    <compoundname>readPipe.h</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includedby refid="System_8h" local="yes">/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/System.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h</label>
        <link refid="readPipe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="2">
        <label>unistd.h</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Argument.h</label>
        <link refid="Argument_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/CommandArgs.h</label>
        <link refid="CommandArgs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h</label>
        <link refid="Toggle_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/FileIO/FileIO.h</label>
        <link refid="FileIO_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/FileIO/LineReader.h</label>
        <link refid="LineReader_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/FileIO/fileWriter.h</label>
        <link refid="fileWriter_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/JSL.h</label>
        <link refid="JSL_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/Maths/Maths.h</label>
        <link refid="Maths_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/Maths/matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/Maths/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/System.h</label>
        <link refid="System_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h</label>
        <link refid="readPipe_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/Testing/Testing.h</label>
        <link refid="Testing_8h"/>
      </node>
      <node id="8">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/Testing/Testing_UnitTests.h</label>
        <link refid="Testing__UnitTests_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/gnuplot/axis.h</label>
        <link refid="axis_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/gnuplot/gnuplot.h</label>
        <link refid="gnuplot_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/Users/jf20/Documents/Genomics/Deforest/libs/JSL/gnuplot/gnuplotMain.h</label>
        <link refid="gnuplotMain_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/Distributor.h</label>
        <link refid="Distributor_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/HarmonicFunctions.h</label>
        <link refid="HarmonicFunctions_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/NegativeBinomial.h</label>
        <link refid="NegativeBinomial_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/Transitions.h</label>
        <link refid="Transitions_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/data.h</label>
        <link refid="data_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/harmonicFit.h</label>
        <link refid="harmonicFit_8h"/>
      </node>
      <node id="16">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/plotting.h</label>
        <link refid="plotting_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/settings.h</label>
        <link refid="settings_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceJSL">JSL</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="readPipe_8h_1a31279539757b2f9eefd27c21e626d91c" prot="public" static="no">
        <name>forLineInPipedInput</name>
        <param><defname>...</defname></param>
        <initializer>{								\
	if (!<ref refid="namespaceJSL_1addbf4a35e1d5a856d7c301e1e5829c2f" kindref="member">JSL::PipedInputFound</ref>()){		\
		Error(<ref refid="namespaceJSL_1a5059dbafa288b9b3beac1746f4acae61a7da39e712d8960d161fbef3305d793a4" kindref="member">JSL::IOError</ref>,&quot;Cannot Read Piped input from standard input channel&quot;);}	\
	do 							\
	{							\
		std::string PIPE_LINE;				\
		while (getline(std::cin,PIPE_LINE))	\
		{							\
			__VA_ARGS__				\
		}							\
	} while(0);						\
}									\</initializer>
        <briefdescription>
<para>A similar macro to forLineIn, but this one iterates through piped input (either from explit pipes &quot;|&quot; or from directed files &quot;&lt;&quot;) line by line, exposing the variable PIPE_LINE for further manipulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h" line="6" column="9" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h" bodystart="6" bodyend="19"/>
      </memberdef>
      <memberdef kind="define" id="readPipe_8h_1a1f4c6286fc9bd9ed7d95ee91a3d303cf" prot="public" static="no">
        <name>forLineVectorInPipedInput</name>
        <param><defname>token</defname></param>
        <param><defname>...</defname></param>
        <initializer>{								\
	<ref refid="readPipe_8h_1a31279539757b2f9eefd27c21e626d91c" kindref="member">forLineInPipedInput</ref>(		\
			std::vector&lt;std::string&gt; PIPE_LINE_VECTOR = <ref refid="namespaceJSL_1aa37a5ffd99a34e2f12377c9f00b31c50" kindref="member">JSL::split</ref>(PIPE_LINE);	\
			__VA_ARGS__				\
		}							\
	} while(0);						\
}									\</initializer>
        <briefdescription>
<para>A similar macro to forLineIn, but this one iterates through piped input (either from explit pipes &quot;|&quot; or from directed files &quot;&lt;&quot;) line by line, exposing the variable PIPE_LINE for further manipulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h" line="21" column="9" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h" bodystart="21" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight></codeline>
<codeline lineno="6" refid="readPipe_8h_1a31279539757b2f9eefd27c21e626d91c" refkind="member"><highlight class="preprocessor">#define<sp/>forLineInPipedInput(<sp/>...<sp/>)\</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!JSL::PipedInputFound()){<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error(JSL::IOError,&quot;Cannot<sp/>Read<sp/>Piped<sp/>input<sp/>from<sp/>standard<sp/>input<sp/>channel&quot;);}<sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>PIPE_LINE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(getline(std::cin,PIPE_LINE))<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="21" refid="readPipe_8h_1a1f4c6286fc9bd9ed7d95ee91a3d303cf" refkind="member"><highlight class="preprocessor">#define<sp/>forLineVectorInPipedInput(token,<sp/>...)\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>forLineInPipedInput(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>PIPE_LINE_VECTOR<sp/>=<sp/>JSL::split(PIPE_LINE);<sp/><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VA_ARGS__<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceJSL" kindref="compound">JSL</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="namespaceJSL_1addbf4a35e1d5a856d7c301e1e5829c2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceJSL_1addbf4a35e1d5a856d7c301e1e5829c2f" kindref="member">PipedInputFound</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="structJSL_1_1NameValuePair" kindref="compound">isatty</ref>(<ref refid="structJSL_1_1NameValuePair" kindref="compound">fileno</ref>(<ref refid="structJSL_1_1NameValuePair" kindref="compound">stdin</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespaceJSL_1ac54b96d9c3678069d34aa56f4a3b3a0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceJSL_1ac54b96d9c3678069d34aa56f4a3b3a0f" kindref="member">readPipedInputString</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">s</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readPipe_8h_1a31279539757b2f9eefd27c21e626d91c" kindref="member">forLineInPipedInput</ref>(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structJSL_1_1NameValuePair" kindref="compound">i</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">s</ref>+=</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevents<sp/>including<sp/>the<sp/>final<sp/>terminal<sp/>line<sp/>break<sp/>associated<sp/>with<sp/>the<sp/>EOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">s</ref><sp/>+=<sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">PIPE_LINE</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structJSL_1_1NameValuePair" kindref="compound">i</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structJSL_1_1NameValuePair" kindref="compound">s</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/System/readPipe.h"/>
  </compounddef>
</doxygen>
