<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="basicFunctions_8h" kind="file" language="C++">
    <compoundname>basicFunctions.h</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="NegativeBinomial_8h" local="yes">/Users/jf20/Documents/Genomics/Deforest/src/NegativeBinomial.h</includedby>
    <includedby refid="data_8h" local="yes">/Users/jf20/Documents/Genomics/Deforest/src/data.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h</label>
        <link refid="basicFunctions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/Distributor.h</label>
        <link refid="Distributor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/HarmonicFunctions.h</label>
        <link refid="HarmonicFunctions_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/NegativeBinomial.h</label>
        <link refid="NegativeBinomial_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/Transitions.h</label>
        <link refid="Transitions_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h</label>
        <link refid="basicFunctions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/data.h</label>
        <link refid="data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/harmonicFit.h</label>
        <link refid="harmonicFit_8h"/>
      </node>
      <node id="8">
        <label>/Users/jf20/Documents/Genomics/Deforest/src/plotting.h</label>
        <link refid="plotting_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="basicFunctions_8h_1ae9ae64d8a840f96015ae5e1421199248" prot="public" static="no">
        <name>Log</name>
        <param><defname>...</defname></param>
        <initializer>{									\
	if (<ref refid="basicFunctions_8h_1a4338f6760709ebb9944c56f03268e4e6" kindref="member">globalVerbose</ref>) 					\
	{								\
		std::cout &lt;&lt; __VA_ARGS__;	\
	}								\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" line="6" column="9" bodyfile="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" bodystart="6" bodyend="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="basicFunctions_8h_1a4338f6760709ebb9944c56f03268e4e6" prot="public" static="no" extern="yes" mutable="no">
        <type>bool</type>
        <definition>bool globalVerbose</definition>
        <argsstring></argsstring>
        <name>globalVerbose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" line="5" column="13" declfile="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" declline="5" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="basicFunctions_8h_1ac15fc66c1e5aff63ea41e3c97240ef3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ale</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>ale</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" line="14" column="8" declfile="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" declline="14" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="basicFunctions_8h_1a25b520747637727e0a067178131c590a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; exp</definition>
        <argsstring>(std::vector&lt; double &gt; x)</argsstring>
        <name>exp</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" line="17" column="13" declfile="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h" declline="17" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="basicFunctions_8h_1a4338f6760709ebb9944c56f03268e4e6" kindref="member">globalVerbose</ref>;</highlight></codeline>
<codeline lineno="6" refid="basicFunctions_8h_1ae9ae64d8a840f96015ae5e1421199248" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Log(<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(globalVerbose)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>__VA_ARGS__;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="basicFunctions_8h_1ac15fc66c1e5aff63ea41e3c97240ef3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="basicFunctions_8h_1ac15fc66c1e5aff63ea41e3c97240ef3f" kindref="member">ale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="basicFunctions_8h_1a25b520747637727e0a067178131c590a" refkind="member"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="basicFunctions_8h_1a25b520747637727e0a067178131c590a" kindref="member">exp</ref>(std::vector&lt;double&gt;<sp/>x);</highlight></codeline>
    </programlisting>
    <location file="/Users/jf20/Documents/Genomics/Deforest/src/basicFunctions.h"/>
  </compounddef>
</doxygen>
