<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classJSL_1_1Toggle" kind="class" language="C++" prot="public">
    <compoundname>JSL::Toggle</compoundname>
    <basecompoundref refid="classJSL_1_1Argument" prot="public" virt="non-virtual">JSL::Argument&lt; bool &gt;</basecompoundref>
    <includes refid="Toggle_8h" local="no">Toggle.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classJSL_1_1Toggle_1a1d4a110b61fad303c6a3651d8ec6b861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSL::Toggle::Toggle</definition>
        <argsstring>(std::string trigger)</argsstring>
        <name>Toggle</name>
        <qualifiedname>JSL::Toggle::Toggle</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Non-Parsing Constructor. With no default value provided, false is assumed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="14" column="1" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1Toggle_1abfe418b14de3b6524d79e83c64b35456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSL::Toggle::Toggle</definition>
        <argsstring>(bool defaultVal, std::string trigger)</argsstring>
        <name>Toggle</name>
        <qualifiedname>JSL::Toggle::Toggle</qualifiedname>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">bool</ref></type>
          <declname>defaultVal</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Non-Parsing Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="16" column="1" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1Toggle_1a942da5cba465fc2a9b17ba61d1e04974" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSL::Toggle::Toggle</definition>
        <argsstring>(bool defaultVal, std::string trigger, int argc, char **argv)</argsstring>
        <name>Toggle</name>
        <qualifiedname>JSL::Toggle::Toggle</qualifiedname>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">bool</ref></type>
          <declname>defaultVal</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>trigger</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">char</ref> **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Parsing Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="18" column="1" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classJSL_1_1Toggle_1a9819749bc5f33f184905f51865c5fae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JSL::Toggle::Toggle</definition>
        <argsstring>(std::string trigger, int argc, char **argv)</argsstring>
        <name>Toggle</name>
        <qualifiedname>JSL::Toggle::Toggle</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>trigger</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">char</ref> **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Parsing Constructor With no default value provided, false is assumed (hence True if trigger is in argv) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="23" column="1" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="23" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classJSL_1_1Toggle_1a1d85f1c5c2bbee6ee863df002dcb94f9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">void</ref></type>
        <definition>void JSL::Toggle::ToggleParse</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>ToggleParse</name>
        <qualifiedname>JSL::Toggle::ToggleParse</qualifiedname>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="structJSL_1_1NameValuePair" kindref="compound">char</ref> *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Overload the usual <ref refid="classJSL_1_1Argument_1a64740707b33acbcb7fa664c253973cd2" kindref="member">Argument::ListParse</ref> with a specialised version for detecting single-arg elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="29" column="6" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="29" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A <ref refid="classJSL_1_1Toggle" kindref="compound">Toggle</ref> is a special case of an <ref refid="classJSL_1_1Argument" kindref="compound">Argument</ref> which doesn&apos;t actually require an argument - that is, the presence of the flag is informative. A toggle is an <ref refid="classJSL_1_1Argument" kindref="compound">Argument&lt;bool&gt;</ref> object with a specialised constructor which looks only for the presence of the TriggerString. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>JSL::Argument&lt; bool &gt;</label>
        <link refid="classJSL_1_1Argument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JSL::ArgumentInterface</label>
        <link refid="classJSL_1_1ArgumentInterface"/>
      </node>
      <node id="1">
        <label>JSL::Toggle</label>
        <link refid="classJSL_1_1Toggle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>JSL::Argument&lt; bool &gt;</label>
        <link refid="classJSL_1_1Argument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JSL::ArgumentInterface</label>
        <link refid="classJSL_1_1ArgumentInterface"/>
      </node>
      <node id="1">
        <label>JSL::Toggle</label>
        <link refid="classJSL_1_1Toggle"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" line="9" column="1" bodyfile="/Users/jf20/Documents/Genomics/Deforest/libs/JSL/CommandArgs/Toggle.h" bodystart="10" bodyend="40"/>
    <listofallmembers>
      <member refid="classJSL_1_1Argument_1ab438509a3c030516de72f3f493295bd5" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Argument</name></member>
      <member refid="classJSL_1_1Argument_1ab07e7981db832cce30f534c67f6491f4" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Argument</name></member>
      <member refid="classJSL_1_1Argument_1a2511f7c98ee2b0b59650f468341b8747" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Argument</name></member>
      <member refid="classJSL_1_1Argument_1a4d187d2fb658021866b173987b920ab4" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Argument</name></member>
      <member refid="classJSL_1_1Argument_1a83799e9089f88d7e6cf30990fae42610" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Argument</name></member>
      <member refid="classJSL_1_1ArgumentInterface_1a5c12814b0c7d12369aebd77baa19fbac" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>ArgumentInterface</name></member>
      <member refid="classJSL_1_1Argument_1ac77530598054943c996dbb5fb677b844" prot="private" virt="virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1ab62b81b196fdc434ab03cd3257ab4aef" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1a1d8e2599d4c7ff479bd7a5c855d485aa" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1ad023ca0ed8f956af79fb060eabd844c9" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1ad379e95cccb05516525e2634cba93579" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1a3a1fc796058e3bc1b1a4778688249baf" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>AssignValue</name></member>
      <member refid="classJSL_1_1Argument_1a8614eb66f807132c4323847e05e666c4" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>CheckForInvalidTriggers</name></member>
      <member refid="classJSL_1_1Argument_1aa626ff37dbebaf0501614dc625a76383" prot="public" virt="virtual"><scope>JSL::Toggle</scope><name>Configure</name></member>
      <member refid="classJSL_1_1Argument_1a64740707b33acbcb7fa664c253973cd2" prot="public" virt="virtual"><scope>JSL::Toggle</scope><name>ListParse</name></member>
      <member refid="classJSL_1_1Argument_1a965bc0dfdce6e03380605af313f8c880" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>operator bool</name></member>
      <member refid="classJSL_1_1Argument_1a088b37401f3183f6f3b081bfd370c991" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>operator bool</name></member>
      <member refid="classJSL_1_1Argument_1a8984e7ce23155259d90a3e98170f36e0" prot="public" virt="virtual"><scope>JSL::Toggle</scope><name>Parse</name></member>
      <member refid="classJSL_1_1Toggle_1a1d4a110b61fad303c6a3651d8ec6b861" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Toggle</name></member>
      <member refid="classJSL_1_1Toggle_1abfe418b14de3b6524d79e83c64b35456" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Toggle</name></member>
      <member refid="classJSL_1_1Toggle_1a942da5cba465fc2a9b17ba61d1e04974" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Toggle</name></member>
      <member refid="classJSL_1_1Toggle_1a9819749bc5f33f184905f51865c5fae5" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Toggle</name></member>
      <member refid="classJSL_1_1Toggle_1a1d85f1c5c2bbee6ee863df002dcb94f9" prot="private" virt="non-virtual"><scope>JSL::Toggle</scope><name>ToggleParse</name></member>
      <member refid="classJSL_1_1ArgumentInterface_1a29460ecfd033ad1a485333767e28b816" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>TriggerString</name></member>
      <member refid="classJSL_1_1Argument_1a83ada5bfa412192f76dd4290f679defd" prot="public" virt="non-virtual"><scope>JSL::Toggle</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
